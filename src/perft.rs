/*
    Anura
    Copyright (C) 2024 Joseph Pasfield

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/

use std::time::Instant;

use crate::{board::Board, types::MoveList};

pub fn perft(board: &mut Board, depth: u8) -> u64 {
    if depth == 0 { return 1 };
    let mut list: MoveList = MoveList::new();
    board.get_moves(&mut list);
    let mut result: u64 = 0;
    for mov in list {
        if board.make_move(mov) {
            result += perft(board, depth - 1);
            board.undo_move();
        }
    }
    result
}

struct PerftTest {
    fen: String,
    depth: u8,
    nodes: u64,
}

impl PerftTest {
    pub fn new(fe: &str, dep: u8, nod: u64) -> Self {
        Self{fen: fe.to_string(), depth: dep, nodes: nod}
    }
}

pub fn run_perft_suite() {
    println!("loading testsuite");
    let test_suite: [PerftTest; 755] = [
        PerftTest::new("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1", 1, 20),
        PerftTest::new("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1", 2, 400),
        PerftTest::new("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1", 3, 8902),
        PerftTest::new("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1", 4, 197_281),
        PerftTest::new("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1", 5, 4_865_609),
        PerftTest::new("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1", 6, 119_060_324),
        PerftTest::new("r3k2r/p1ppqpb1/bn2pnp1/3PN3/1p2P3/2N2Q1p/PPPBBPPP/R3K2R w KQkq - 0 1", 1, 48),
        PerftTest::new("r3k2r/p1ppqpb1/bn2pnp1/3PN3/1p2P3/2N2Q1p/PPPBBPPP/R3K2R w KQkq - 0 1", 2, 2039),
        PerftTest::new("r3k2r/p1ppqpb1/bn2pnp1/3PN3/1p2P3/2N2Q1p/PPPBBPPP/R3K2R w KQkq - 0 1", 3, 97862),
        PerftTest::new("r3k2r/p1ppqpb1/bn2pnp1/3PN3/1p2P3/2N2Q1p/PPPBBPPP/R3K2R w KQkq - 0 1", 4, 4_085_603),
        PerftTest::new("r3k2r/p1ppqpb1/bn2pnp1/3PN3/1p2P3/2N2Q1p/PPPBBPPP/R3K2R w KQkq - 0 1", 5, 193_690_690),
        PerftTest::new("4k3/8/8/8/8/8/8/4K2R w K - 0 1", 1, 15),
        PerftTest::new("4k3/8/8/8/8/8/8/4K2R w K - 0 1", 2, 66),
        PerftTest::new("4k3/8/8/8/8/8/8/4K2R w K - 0 1", 3, 1197),
        PerftTest::new("4k3/8/8/8/8/8/8/4K2R w K - 0 1", 4, 7059),
        PerftTest::new("4k3/8/8/8/8/8/8/4K2R w K - 0 1", 5, 133_987),
        PerftTest::new("4k3/8/8/8/8/8/8/4K2R w K - 0 1", 6, 764_643),
        PerftTest::new("4k3/8/8/8/8/8/8/R3K3 w Q - 0 1", 1, 16),
        PerftTest::new("4k3/8/8/8/8/8/8/R3K3 w Q - 0 1", 2, 71),
        PerftTest::new("4k3/8/8/8/8/8/8/R3K3 w Q - 0 1", 3, 1287),
        PerftTest::new("4k3/8/8/8/8/8/8/R3K3 w Q - 0 1", 4, 7626),
        PerftTest::new("4k3/8/8/8/8/8/8/R3K3 w Q - 0 1", 5, 145_232),
        PerftTest::new("4k3/8/8/8/8/8/8/R3K3 w Q - 0 1", 6, 846_648),
        PerftTest::new("4k2r/8/8/8/8/8/8/4K3 w k - 0 1", 1, 5),
        PerftTest::new("4k2r/8/8/8/8/8/8/4K3 w k - 0 1", 2, 75),
        PerftTest::new("4k2r/8/8/8/8/8/8/4K3 w k - 0 1", 3, 459),
        PerftTest::new("4k2r/8/8/8/8/8/8/4K3 w k - 0 1", 4, 8290),
        PerftTest::new("4k2r/8/8/8/8/8/8/4K3 w k - 0 1", 5, 47635),
        PerftTest::new("4k2r/8/8/8/8/8/8/4K3 w k - 0 1", 6, 899_442),
        PerftTest::new("r3k3/8/8/8/8/8/8/4K3 w q - 0 1", 1, 5),
        PerftTest::new("r3k3/8/8/8/8/8/8/4K3 w q - 0 1", 2, 80),
        PerftTest::new("r3k3/8/8/8/8/8/8/4K3 w q - 0 1", 3, 493),
        PerftTest::new("r3k3/8/8/8/8/8/8/4K3 w q - 0 1", 4, 8897),
        PerftTest::new("r3k3/8/8/8/8/8/8/4K3 w q - 0 1", 5, 52710),
        PerftTest::new("r3k3/8/8/8/8/8/8/4K3 w q - 0 1", 6, 1_001_523),
        PerftTest::new("4k3/8/8/8/8/8/8/R3K2R w KQ - 0 1", 1, 26),
        PerftTest::new("4k3/8/8/8/8/8/8/R3K2R w KQ - 0 1", 2, 112),
        PerftTest::new("4k3/8/8/8/8/8/8/R3K2R w KQ - 0 1", 3, 3189),
        PerftTest::new("4k3/8/8/8/8/8/8/R3K2R w KQ - 0 1", 4, 17945),
        PerftTest::new("4k3/8/8/8/8/8/8/R3K2R w KQ - 0 1", 5, 532_933),
        PerftTest::new("4k3/8/8/8/8/8/8/R3K2R w KQ - 0 1", 6, 2_788_982),
        PerftTest::new("r3k2r/8/8/8/8/8/8/4K3 w kq - 0 1", 1, 5),
        PerftTest::new("r3k2r/8/8/8/8/8/8/4K3 w kq - 0 1", 2, 130),
        PerftTest::new("r3k2r/8/8/8/8/8/8/4K3 w kq - 0 1", 3, 782),
        PerftTest::new("r3k2r/8/8/8/8/8/8/4K3 w kq - 0 1", 4, 22180),
        PerftTest::new("r3k2r/8/8/8/8/8/8/4K3 w kq - 0 1", 5, 118_882),
        PerftTest::new("r3k2r/8/8/8/8/8/8/4K3 w kq - 0 1", 6, 3_517_770),
        PerftTest::new("8/8/8/8/8/8/6k1/4K2R w K - 0 1", 1, 12),
        PerftTest::new("8/8/8/8/8/8/6k1/4K2R w K - 0 1", 2, 38),
        PerftTest::new("8/8/8/8/8/8/6k1/4K2R w K - 0 1", 3, 564),
        PerftTest::new("8/8/8/8/8/8/6k1/4K2R w K - 0 1", 4, 2219),
        PerftTest::new("8/8/8/8/8/8/6k1/4K2R w K - 0 1", 5, 37735),
        PerftTest::new("8/8/8/8/8/8/6k1/4K2R w K - 0 1", 6, 185_867),
        PerftTest::new("8/8/8/8/8/8/1k6/R3K3 w Q - 0 1", 1, 15),
        PerftTest::new("8/8/8/8/8/8/1k6/R3K3 w Q - 0 1", 2, 65),
        PerftTest::new("8/8/8/8/8/8/1k6/R3K3 w Q - 0 1", 3, 1018),
        PerftTest::new("8/8/8/8/8/8/1k6/R3K3 w Q - 0 1", 4, 4573),
        PerftTest::new("8/8/8/8/8/8/1k6/R3K3 w Q - 0 1", 5, 80619),
        PerftTest::new("8/8/8/8/8/8/1k6/R3K3 w Q - 0 1", 6, 413_018),
        PerftTest::new("4k2r/6K1/8/8/8/8/8/8 w k - 0 1", 1, 3),
        PerftTest::new("4k2r/6K1/8/8/8/8/8/8 w k - 0 1", 2, 32),
        PerftTest::new("4k2r/6K1/8/8/8/8/8/8 w k - 0 1", 3, 134),
        PerftTest::new("4k2r/6K1/8/8/8/8/8/8 w k - 0 1", 4, 2073),
        PerftTest::new("4k2r/6K1/8/8/8/8/8/8 w k - 0 1", 5, 10485),
        PerftTest::new("4k2r/6K1/8/8/8/8/8/8 w k - 0 1", 6, 179_869),
        PerftTest::new("r3k3/1K6/8/8/8/8/8/8 w q - 0 1", 1, 4),
        PerftTest::new("r3k3/1K6/8/8/8/8/8/8 w q - 0 1", 2, 49),
        PerftTest::new("r3k3/1K6/8/8/8/8/8/8 w q - 0 1", 3, 243),
        PerftTest::new("r3k3/1K6/8/8/8/8/8/8 w q - 0 1", 4, 3991),
        PerftTest::new("r3k3/1K6/8/8/8/8/8/8 w q - 0 1", 5, 20780),
        PerftTest::new("r3k3/1K6/8/8/8/8/8/8 w q - 0 1", 6, 367_724),
        PerftTest::new("r3k2r/8/8/8/8/8/8/R3K2R w KQkq - 0 1", 1, 26),
        PerftTest::new("r3k2r/8/8/8/8/8/8/R3K2R w KQkq - 0 1", 2, 568),
        PerftTest::new("r3k2r/8/8/8/8/8/8/R3K2R w KQkq - 0 1", 3, 13744),
        PerftTest::new("r3k2r/8/8/8/8/8/8/R3K2R w KQkq - 0 1", 4, 314_346),
        PerftTest::new("r3k2r/8/8/8/8/8/8/R3K2R w KQkq - 0 1", 5, 7_594_526),
        PerftTest::new("r3k2r/8/8/8/8/8/8/R3K2R w KQkq - 0 1", 6, 179_862_938),
        PerftTest::new("r3k2r/8/8/8/8/8/8/1R2K2R w Kkq - 0 1", 1, 25),
        PerftTest::new("r3k2r/8/8/8/8/8/8/1R2K2R w Kkq - 0 1", 2, 567),
        PerftTest::new("r3k2r/8/8/8/8/8/8/1R2K2R w Kkq - 0 1", 3, 14095),
        PerftTest::new("r3k2r/8/8/8/8/8/8/1R2K2R w Kkq - 0 1", 4, 328_965),
        PerftTest::new("r3k2r/8/8/8/8/8/8/1R2K2R w Kkq - 0 1", 5, 8_153_719),
        PerftTest::new("r3k2r/8/8/8/8/8/8/1R2K2R w Kkq - 0 1", 6, 195_629_489),
        PerftTest::new("r3k2r/8/8/8/8/8/8/2R1K2R w Kkq - 0 1", 1, 25),
        PerftTest::new("r3k2r/8/8/8/8/8/8/2R1K2R w Kkq - 0 1", 2, 548),
        PerftTest::new("r3k2r/8/8/8/8/8/8/2R1K2R w Kkq - 0 1", 3, 13502),
        PerftTest::new("r3k2r/8/8/8/8/8/8/2R1K2R w Kkq - 0 1", 4, 312_835),
        PerftTest::new("r3k2r/8/8/8/8/8/8/2R1K2R w Kkq - 0 1", 5, 7_736_373),
        PerftTest::new("r3k2r/8/8/8/8/8/8/2R1K2R w Kkq - 0 1", 6, 184_411_439),
        PerftTest::new("r3k2r/8/8/8/8/8/8/R3K1R1 w Qkq - 0 1", 1, 25),
        PerftTest::new("r3k2r/8/8/8/8/8/8/R3K1R1 w Qkq - 0 1", 2, 547),
        PerftTest::new("r3k2r/8/8/8/8/8/8/R3K1R1 w Qkq - 0 1", 3, 13579),
        PerftTest::new("r3k2r/8/8/8/8/8/8/R3K1R1 w Qkq - 0 1", 4, 316_214),
        PerftTest::new("r3k2r/8/8/8/8/8/8/R3K1R1 w Qkq - 0 1", 5, 7_878_456),
        PerftTest::new("r3k2r/8/8/8/8/8/8/R3K1R1 w Qkq - 0 1", 6, 189_224_276),
        PerftTest::new("1r2k2r/8/8/8/8/8/8/R3K2R w KQk - 0 1", 1, 26),
        PerftTest::new("1r2k2r/8/8/8/8/8/8/R3K2R w KQk - 0 1", 2, 583),
        PerftTest::new("1r2k2r/8/8/8/8/8/8/R3K2R w KQk - 0 1", 3, 14252),
        PerftTest::new("1r2k2r/8/8/8/8/8/8/R3K2R w KQk - 0 1", 4, 334_705),
        PerftTest::new("1r2k2r/8/8/8/8/8/8/R3K2R w KQk - 0 1", 5, 8_198_901),
        PerftTest::new("1r2k2r/8/8/8/8/8/8/R3K2R w KQk - 0 1", 6, 198_328_929),
        PerftTest::new("2r1k2r/8/8/8/8/8/8/R3K2R w KQk - 0 1", 1, 25),
        PerftTest::new("2r1k2r/8/8/8/8/8/8/R3K2R w KQk - 0 1", 2, 560),
        PerftTest::new("2r1k2r/8/8/8/8/8/8/R3K2R w KQk - 0 1", 3, 13592),
        PerftTest::new("2r1k2r/8/8/8/8/8/8/R3K2R w KQk - 0 1", 4, 317_324),
        PerftTest::new("2r1k2r/8/8/8/8/8/8/R3K2R w KQk - 0 1", 5, 7_710_115),
        PerftTest::new("2r1k2r/8/8/8/8/8/8/R3K2R w KQk - 0 1", 6, 185_959_088),
        PerftTest::new("r3k1r1/8/8/8/8/8/8/R3K2R w KQq - 0 1", 1, 25),
        PerftTest::new("r3k1r1/8/8/8/8/8/8/R3K2R w KQq - 0 1", 2, 560),
        PerftTest::new("r3k1r1/8/8/8/8/8/8/R3K2R w KQq - 0 1", 3, 13607),
        PerftTest::new("r3k1r1/8/8/8/8/8/8/R3K2R w KQq - 0 1", 4, 320_792),
        PerftTest::new("r3k1r1/8/8/8/8/8/8/R3K2R w KQq - 0 1", 5, 7_848_606),
        PerftTest::new("r3k1r1/8/8/8/8/8/8/R3K2R w KQq - 0 1", 6, 190_755_813),
        PerftTest::new("4k3/8/8/8/8/8/8/4K2R b K - 0 1", 1, 5),
        PerftTest::new("4k3/8/8/8/8/8/8/4K2R b K - 0 1", 2, 75),
        PerftTest::new("4k3/8/8/8/8/8/8/4K2R b K - 0 1", 3, 459),
        PerftTest::new("4k3/8/8/8/8/8/8/4K2R b K - 0 1", 4, 8290),
        PerftTest::new("4k3/8/8/8/8/8/8/4K2R b K - 0 1", 5, 47635),
        PerftTest::new("4k3/8/8/8/8/8/8/4K2R b K - 0 1", 6, 899_442),
        PerftTest::new("4k3/8/8/8/8/8/8/R3K3 b Q - 0 1", 1, 5),
        PerftTest::new("4k3/8/8/8/8/8/8/R3K3 b Q - 0 1", 2, 80),
        PerftTest::new("4k3/8/8/8/8/8/8/R3K3 b Q - 0 1", 3, 493),
        PerftTest::new("4k3/8/8/8/8/8/8/R3K3 b Q - 0 1", 4, 8897),
        PerftTest::new("4k3/8/8/8/8/8/8/R3K3 b Q - 0 1", 5, 52710),
        PerftTest::new("4k3/8/8/8/8/8/8/R3K3 b Q - 0 1", 6, 1_001_523),
        PerftTest::new("4k2r/8/8/8/8/8/8/4K3 b k - 0 1", 1, 15),
        PerftTest::new("4k2r/8/8/8/8/8/8/4K3 b k - 0 1", 2, 66),
        PerftTest::new("4k2r/8/8/8/8/8/8/4K3 b k - 0 1", 3, 1197),
        PerftTest::new("4k2r/8/8/8/8/8/8/4K3 b k - 0 1", 4, 7059),
        PerftTest::new("4k2r/8/8/8/8/8/8/4K3 b k - 0 1", 5, 133_987),
        PerftTest::new("4k2r/8/8/8/8/8/8/4K3 b k - 0 1", 6, 764_643),
        PerftTest::new("r3k3/8/8/8/8/8/8/4K3 b q - 0 1", 1, 16),
        PerftTest::new("r3k3/8/8/8/8/8/8/4K3 b q - 0 1", 2, 71),
        PerftTest::new("r3k3/8/8/8/8/8/8/4K3 b q - 0 1", 3, 1287),
        PerftTest::new("r3k3/8/8/8/8/8/8/4K3 b q - 0 1", 4, 7626),
        PerftTest::new("r3k3/8/8/8/8/8/8/4K3 b q - 0 1", 5, 145_232),
        PerftTest::new("r3k3/8/8/8/8/8/8/4K3 b q - 0 1", 6, 846_648),
        PerftTest::new("4k3/8/8/8/8/8/8/R3K2R b KQ - 0 1", 1, 5),
        PerftTest::new("4k3/8/8/8/8/8/8/R3K2R b KQ - 0 1", 2, 130),
        PerftTest::new("4k3/8/8/8/8/8/8/R3K2R b KQ - 0 1", 3, 782),
        PerftTest::new("4k3/8/8/8/8/8/8/R3K2R b KQ - 0 1", 4, 22180),
        PerftTest::new("4k3/8/8/8/8/8/8/R3K2R b KQ - 0 1", 5, 118_882),
        PerftTest::new("4k3/8/8/8/8/8/8/R3K2R b KQ - 0 1", 6, 3_517_770),
        PerftTest::new("r3k2r/8/8/8/8/8/8/4K3 b kq - 0 1", 1, 26),
        PerftTest::new("r3k2r/8/8/8/8/8/8/4K3 b kq - 0 1", 2, 112),
        PerftTest::new("r3k2r/8/8/8/8/8/8/4K3 b kq - 0 1", 3, 3189),
        PerftTest::new("r3k2r/8/8/8/8/8/8/4K3 b kq - 0 1", 4, 17945),
        PerftTest::new("r3k2r/8/8/8/8/8/8/4K3 b kq - 0 1", 5, 532_933),
        PerftTest::new("r3k2r/8/8/8/8/8/8/4K3 b kq - 0 1", 6, 2_788_982),
        PerftTest::new("8/8/8/8/8/8/6k1/4K2R b K - 0 1", 1, 3),
        PerftTest::new("8/8/8/8/8/8/6k1/4K2R b K - 0 1", 2, 32),
        PerftTest::new("8/8/8/8/8/8/6k1/4K2R b K - 0 1", 3, 134),
        PerftTest::new("8/8/8/8/8/8/6k1/4K2R b K - 0 1", 4, 2073),
        PerftTest::new("8/8/8/8/8/8/6k1/4K2R b K - 0 1", 5, 10485),
        PerftTest::new("8/8/8/8/8/8/6k1/4K2R b K - 0 1", 6, 179_869),
        PerftTest::new("8/8/8/8/8/8/1k6/R3K3 b Q - 0 1", 1, 4),
        PerftTest::new("8/8/8/8/8/8/1k6/R3K3 b Q - 0 1", 2, 49),
        PerftTest::new("8/8/8/8/8/8/1k6/R3K3 b Q - 0 1", 3, 243),
        PerftTest::new("8/8/8/8/8/8/1k6/R3K3 b Q - 0 1", 4, 3991),
        PerftTest::new("8/8/8/8/8/8/1k6/R3K3 b Q - 0 1", 5, 20780),
        PerftTest::new("8/8/8/8/8/8/1k6/R3K3 b Q - 0 1", 6, 367_724),
        PerftTest::new("4k2r/6K1/8/8/8/8/8/8 b k - 0 1", 1, 12),
        PerftTest::new("4k2r/6K1/8/8/8/8/8/8 b k - 0 1", 2, 38),
        PerftTest::new("4k2r/6K1/8/8/8/8/8/8 b k - 0 1", 3, 564),
        PerftTest::new("4k2r/6K1/8/8/8/8/8/8 b k - 0 1", 4, 2219),
        PerftTest::new("4k2r/6K1/8/8/8/8/8/8 b k - 0 1", 5, 37735),
        PerftTest::new("4k2r/6K1/8/8/8/8/8/8 b k - 0 1", 6, 185_867),
        PerftTest::new("r3k3/1K6/8/8/8/8/8/8 b q - 0 1", 1, 15),
        PerftTest::new("r3k3/1K6/8/8/8/8/8/8 b q - 0 1", 2, 65),
        PerftTest::new("r3k3/1K6/8/8/8/8/8/8 b q - 0 1", 3, 1018),
        PerftTest::new("r3k3/1K6/8/8/8/8/8/8 b q - 0 1", 4, 4573),
        PerftTest::new("r3k3/1K6/8/8/8/8/8/8 b q - 0 1", 5, 80619),
        PerftTest::new("r3k3/1K6/8/8/8/8/8/8 b q - 0 1", 6, 413_018),
        PerftTest::new("r3k2r/8/8/8/8/8/8/R3K2R b KQkq - 0 1", 1, 26),
        PerftTest::new("r3k2r/8/8/8/8/8/8/R3K2R b KQkq - 0 1", 2, 568),
        PerftTest::new("r3k2r/8/8/8/8/8/8/R3K2R b KQkq - 0 1", 3, 13744),
        PerftTest::new("r3k2r/8/8/8/8/8/8/R3K2R b KQkq - 0 1", 4, 314_346),
        PerftTest::new("r3k2r/8/8/8/8/8/8/R3K2R b KQkq - 0 1", 5, 7_594_526),
        PerftTest::new("r3k2r/8/8/8/8/8/8/R3K2R b KQkq - 0 1", 6, 179_862_938),
        PerftTest::new("r3k2r/8/8/8/8/8/8/1R2K2R b Kkq - 0 1", 1, 26),
        PerftTest::new("r3k2r/8/8/8/8/8/8/1R2K2R b Kkq - 0 1", 2, 583),
        PerftTest::new("r3k2r/8/8/8/8/8/8/1R2K2R b Kkq - 0 1", 3, 14252),
        PerftTest::new("r3k2r/8/8/8/8/8/8/1R2K2R b Kkq - 0 1", 4, 334_705),
        PerftTest::new("r3k2r/8/8/8/8/8/8/1R2K2R b Kkq - 0 1", 5, 8_198_901),
        PerftTest::new("r3k2r/8/8/8/8/8/8/1R2K2R b Kkq - 0 1", 6, 198_328_929),
        PerftTest::new("r3k2r/8/8/8/8/8/8/2R1K2R b Kkq - 0 1", 1, 25),
        PerftTest::new("r3k2r/8/8/8/8/8/8/2R1K2R b Kkq - 0 1", 2, 560),
        PerftTest::new("r3k2r/8/8/8/8/8/8/2R1K2R b Kkq - 0 1", 3, 13592),
        PerftTest::new("r3k2r/8/8/8/8/8/8/2R1K2R b Kkq - 0 1", 4, 317_324),
        PerftTest::new("r3k2r/8/8/8/8/8/8/2R1K2R b Kkq - 0 1", 5, 7_710_115),
        PerftTest::new("r3k2r/8/8/8/8/8/8/2R1K2R b Kkq - 0 1", 6, 185_959_088),
        PerftTest::new("r3k2r/8/8/8/8/8/8/R3K1R1 b Qkq - 0 1", 1, 25),
        PerftTest::new("r3k2r/8/8/8/8/8/8/R3K1R1 b Qkq - 0 1", 2, 560),
        PerftTest::new("r3k2r/8/8/8/8/8/8/R3K1R1 b Qkq - 0 1", 3, 13607),
        PerftTest::new("r3k2r/8/8/8/8/8/8/R3K1R1 b Qkq - 0 1", 4, 320_792),
        PerftTest::new("r3k2r/8/8/8/8/8/8/R3K1R1 b Qkq - 0 1", 5, 7_848_606),
        PerftTest::new("r3k2r/8/8/8/8/8/8/R3K1R1 b Qkq - 0 1", 6, 190_755_813),
        PerftTest::new("1r2k2r/8/8/8/8/8/8/R3K2R b KQk - 0 1", 1, 25),
        PerftTest::new("1r2k2r/8/8/8/8/8/8/R3K2R b KQk - 0 1", 2, 567),
        PerftTest::new("1r2k2r/8/8/8/8/8/8/R3K2R b KQk - 0 1", 3, 14095),
        PerftTest::new("1r2k2r/8/8/8/8/8/8/R3K2R b KQk - 0 1", 4, 328_965),
        PerftTest::new("1r2k2r/8/8/8/8/8/8/R3K2R b KQk - 0 1", 5, 8_153_719),
        PerftTest::new("1r2k2r/8/8/8/8/8/8/R3K2R b KQk - 0 1", 6, 195_629_489),
        PerftTest::new("2r1k2r/8/8/8/8/8/8/R3K2R b KQk - 0 1", 1, 25),
        PerftTest::new("2r1k2r/8/8/8/8/8/8/R3K2R b KQk - 0 1", 2, 548),
        PerftTest::new("2r1k2r/8/8/8/8/8/8/R3K2R b KQk - 0 1", 3, 13502),
        PerftTest::new("2r1k2r/8/8/8/8/8/8/R3K2R b KQk - 0 1", 4, 312_835),
        PerftTest::new("2r1k2r/8/8/8/8/8/8/R3K2R b KQk - 0 1", 5, 7_736_373),
        PerftTest::new("2r1k2r/8/8/8/8/8/8/R3K2R b KQk - 0 1", 6, 184_411_439),
        PerftTest::new("r3k1r1/8/8/8/8/8/8/R3K2R b KQq - 0 1", 1, 25),
        PerftTest::new("r3k1r1/8/8/8/8/8/8/R3K2R b KQq - 0 1", 2, 547),
        PerftTest::new("r3k1r1/8/8/8/8/8/8/R3K2R b KQq - 0 1", 3, 13579),
        PerftTest::new("r3k1r1/8/8/8/8/8/8/R3K2R b KQq - 0 1", 4, 316_214),
        PerftTest::new("r3k1r1/8/8/8/8/8/8/R3K2R b KQq - 0 1", 5, 7_878_456),
        PerftTest::new("r3k1r1/8/8/8/8/8/8/R3K2R b KQq - 0 1", 6, 189_224_276),
        PerftTest::new("8/1n4N1/2k5/8/8/5K2/1N4n1/8 w - - 0 1", 1, 14),
        PerftTest::new("8/1n4N1/2k5/8/8/5K2/1N4n1/8 w - - 0 1", 2, 195),
        PerftTest::new("8/1n4N1/2k5/8/8/5K2/1N4n1/8 w - - 0 1", 3, 2760),
        PerftTest::new("8/1n4N1/2k5/8/8/5K2/1N4n1/8 w - - 0 1", 4, 38675),
        PerftTest::new("8/1n4N1/2k5/8/8/5K2/1N4n1/8 w - - 0 1", 5, 570_726),
        PerftTest::new("8/1n4N1/2k5/8/8/5K2/1N4n1/8 w - - 0 1", 6, 8_107_539),
        PerftTest::new("8/1k6/8/5N2/8/4n3/8/2K5 w - - 0 1", 1, 11),
        PerftTest::new("8/1k6/8/5N2/8/4n3/8/2K5 w - - 0 1", 2, 156),
        PerftTest::new("8/1k6/8/5N2/8/4n3/8/2K5 w - - 0 1", 3, 1636),
        PerftTest::new("8/1k6/8/5N2/8/4n3/8/2K5 w - - 0 1", 4, 20534),
        PerftTest::new("8/1k6/8/5N2/8/4n3/8/2K5 w - - 0 1", 5, 223_507),
        PerftTest::new("8/1k6/8/5N2/8/4n3/8/2K5 w - - 0 1", 6, 2_594_412),
        PerftTest::new("8/8/4k3/3Nn3/3nN3/4K3/8/8 w - - 0 1", 1, 19),
        PerftTest::new("8/8/4k3/3Nn3/3nN3/4K3/8/8 w - - 0 1", 2, 289),
        PerftTest::new("8/8/4k3/3Nn3/3nN3/4K3/8/8 w - - 0 1", 3, 4442),
        PerftTest::new("8/8/4k3/3Nn3/3nN3/4K3/8/8 w - - 0 1", 4, 73584),
        PerftTest::new("8/8/4k3/3Nn3/3nN3/4K3/8/8 w - - 0 1", 5, 1_198_299),
        PerftTest::new("8/8/4k3/3Nn3/3nN3/4K3/8/8 w - - 0 1", 6, 19_870_403),
        PerftTest::new("K7/8/2n5/1n6/8/8/8/k6N w - - 0 1", 1, 3),
        PerftTest::new("K7/8/2n5/1n6/8/8/8/k6N w - - 0 1", 2, 51),
        PerftTest::new("K7/8/2n5/1n6/8/8/8/k6N w - - 0 1", 3, 345),
        PerftTest::new("K7/8/2n5/1n6/8/8/8/k6N w - - 0 1", 4, 5301),
        PerftTest::new("K7/8/2n5/1n6/8/8/8/k6N w - - 0 1", 5, 38348),
        PerftTest::new("K7/8/2n5/1n6/8/8/8/k6N w - - 0 1", 6, 588_695),
        PerftTest::new("k7/8/2N5/1N6/8/8/8/K6n w - - 0 1", 1, 17),
        PerftTest::new("k7/8/2N5/1N6/8/8/8/K6n w - - 0 1", 2, 54),
        PerftTest::new("k7/8/2N5/1N6/8/8/8/K6n w - - 0 1", 3, 835),
        PerftTest::new("k7/8/2N5/1N6/8/8/8/K6n w - - 0 1", 4, 5910),
        PerftTest::new("k7/8/2N5/1N6/8/8/8/K6n w - - 0 1", 5, 92250),
        PerftTest::new("k7/8/2N5/1N6/8/8/8/K6n w - - 0 1", 6, 688_780),
        PerftTest::new("8/1n4N1/2k5/8/8/5K2/1N4n1/8 b - - 0 1", 1, 15),
        PerftTest::new("8/1n4N1/2k5/8/8/5K2/1N4n1/8 b - - 0 1", 2, 193),
        PerftTest::new("8/1n4N1/2k5/8/8/5K2/1N4n1/8 b - - 0 1", 3, 2816),
        PerftTest::new("8/1n4N1/2k5/8/8/5K2/1N4n1/8 b - - 0 1", 4, 40039),
        PerftTest::new("8/1n4N1/2k5/8/8/5K2/1N4n1/8 b - - 0 1", 5, 582_642),
        PerftTest::new("8/1n4N1/2k5/8/8/5K2/1N4n1/8 b - - 0 1", 6, 8_503_277),
        PerftTest::new("8/1k6/8/5N2/8/4n3/8/2K5 b - - 0 1", 1, 16),
        PerftTest::new("8/1k6/8/5N2/8/4n3/8/2K5 b - - 0 1", 2, 180),
        PerftTest::new("8/1k6/8/5N2/8/4n3/8/2K5 b - - 0 1", 3, 2290),
        PerftTest::new("8/1k6/8/5N2/8/4n3/8/2K5 b - - 0 1", 4, 24640),
        PerftTest::new("8/1k6/8/5N2/8/4n3/8/2K5 b - - 0 1", 5, 288_141),
        PerftTest::new("8/1k6/8/5N2/8/4n3/8/2K5 b - - 0 1", 6, 3_147_566),
        PerftTest::new("8/8/3K4/3Nn3/3nN3/4k3/8/8 b - - 0 1", 1, 4),
        PerftTest::new("8/8/3K4/3Nn3/3nN3/4k3/8/8 b - - 0 1", 2, 68),
        PerftTest::new("8/8/3K4/3Nn3/3nN3/4k3/8/8 b - - 0 1", 3, 1118),
        PerftTest::new("8/8/3K4/3Nn3/3nN3/4k3/8/8 b - - 0 1", 4, 16199),
        PerftTest::new("8/8/3K4/3Nn3/3nN3/4k3/8/8 b - - 0 1", 5, 281_190),
        PerftTest::new("8/8/3K4/3Nn3/3nN3/4k3/8/8 b - - 0 1", 6, 4_405_103),
        PerftTest::new("K7/8/2n5/1n6/8/8/8/k6N b - - 0 1", 1, 17),
        PerftTest::new("K7/8/2n5/1n6/8/8/8/k6N b - - 0 1", 2, 54),
        PerftTest::new("K7/8/2n5/1n6/8/8/8/k6N b - - 0 1", 3, 835),
        PerftTest::new("K7/8/2n5/1n6/8/8/8/k6N b - - 0 1", 4, 5910),
        PerftTest::new("K7/8/2n5/1n6/8/8/8/k6N b - - 0 1", 5, 92250),
        PerftTest::new("K7/8/2n5/1n6/8/8/8/k6N b - - 0 1", 6, 688_780),
        PerftTest::new("k7/8/2N5/1N6/8/8/8/K6n b - - 0 1", 1, 3),
        PerftTest::new("k7/8/2N5/1N6/8/8/8/K6n b - - 0 1", 2, 51),
        PerftTest::new("k7/8/2N5/1N6/8/8/8/K6n b - - 0 1", 3, 345),
        PerftTest::new("k7/8/2N5/1N6/8/8/8/K6n b - - 0 1", 4, 5301),
        PerftTest::new("k7/8/2N5/1N6/8/8/8/K6n b - - 0 1", 5, 38348),
        PerftTest::new("k7/8/2N5/1N6/8/8/8/K6n b - - 0 1", 6, 588_695),
        PerftTest::new("B6b/8/8/8/2K5/4k3/8/b6B w - - 0 1", 1, 17),
        PerftTest::new("B6b/8/8/8/2K5/4k3/8/b6B w - - 0 1", 2, 278),
        PerftTest::new("B6b/8/8/8/2K5/4k3/8/b6B w - - 0 1", 3, 4607),
        PerftTest::new("B6b/8/8/8/2K5/4k3/8/b6B w - - 0 1", 4, 76778),
        PerftTest::new("B6b/8/8/8/2K5/4k3/8/b6B w - - 0 1", 5, 1_320_507),
        PerftTest::new("B6b/8/8/8/2K5/4k3/8/b6B w - - 0 1", 6, 22_823_890),
        PerftTest::new("8/8/1B6/7b/7k/8/2B1b3/7K w - - 0 1", 1, 21),
        PerftTest::new("8/8/1B6/7b/7k/8/2B1b3/7K w - - 0 1", 2, 316),
        PerftTest::new("8/8/1B6/7b/7k/8/2B1b3/7K w - - 0 1", 3, 5744),
        PerftTest::new("8/8/1B6/7b/7k/8/2B1b3/7K w - - 0 1", 4, 93338),
        PerftTest::new("8/8/1B6/7b/7k/8/2B1b3/7K w - - 0 1", 5, 1_713_368),
        PerftTest::new("8/8/1B6/7b/7k/8/2B1b3/7K w - - 0 1", 6, 28_861_171),
        PerftTest::new("k7/B7/1B6/1B6/8/8/8/K6b w - - 0 1", 1, 21),
        PerftTest::new("k7/B7/1B6/1B6/8/8/8/K6b w - - 0 1", 2, 144),
        PerftTest::new("k7/B7/1B6/1B6/8/8/8/K6b w - - 0 1", 3, 3242),
        PerftTest::new("k7/B7/1B6/1B6/8/8/8/K6b w - - 0 1", 4, 32955),
        PerftTest::new("k7/B7/1B6/1B6/8/8/8/K6b w - - 0 1", 5, 787_524),
        PerftTest::new("k7/B7/1B6/1B6/8/8/8/K6b w - - 0 1", 6, 7_881_673),
        PerftTest::new("K7/b7/1b6/1b6/8/8/8/k6B w - - 0 1", 1, 7),
        PerftTest::new("K7/b7/1b6/1b6/8/8/8/k6B w - - 0 1", 2, 143),
        PerftTest::new("K7/b7/1b6/1b6/8/8/8/k6B w - - 0 1", 3, 1416),
        PerftTest::new("K7/b7/1b6/1b6/8/8/8/k6B w - - 0 1", 4, 31787),
        PerftTest::new("K7/b7/1b6/1b6/8/8/8/k6B w - - 0 1", 5, 310_862),
        PerftTest::new("K7/b7/1b6/1b6/8/8/8/k6B w - - 0 1", 6, 7_382_896),
        PerftTest::new("B6b/8/8/8/2K5/5k2/8/b6B b - - 0 1", 1, 6),
        PerftTest::new("B6b/8/8/8/2K5/5k2/8/b6B b - - 0 1", 2, 106),
        PerftTest::new("B6b/8/8/8/2K5/5k2/8/b6B b - - 0 1", 3, 1829),
        PerftTest::new("B6b/8/8/8/2K5/5k2/8/b6B b - - 0 1", 4, 31151),
        PerftTest::new("B6b/8/8/8/2K5/5k2/8/b6B b - - 0 1", 5, 530_585),
        PerftTest::new("B6b/8/8/8/2K5/5k2/8/b6B b - - 0 1", 6, 9_250_746),
        PerftTest::new("8/8/1B6/7b/7k/8/2B1b3/7K b - - 0 1", 1, 17),
        PerftTest::new("8/8/1B6/7b/7k/8/2B1b3/7K b - - 0 1", 2, 309),
        PerftTest::new("8/8/1B6/7b/7k/8/2B1b3/7K b - - 0 1", 3, 5133),
        PerftTest::new("8/8/1B6/7b/7k/8/2B1b3/7K b - - 0 1", 4, 93603),
        PerftTest::new("8/8/1B6/7b/7k/8/2B1b3/7K b - - 0 1", 5, 1_591_064),
        PerftTest::new("8/8/1B6/7b/7k/8/2B1b3/7K b - - 0 1", 6, 29_027_891),
        PerftTest::new("k7/B7/1B6/1B6/8/8/8/K6b b - - 0 1", 1, 7),
        PerftTest::new("k7/B7/1B6/1B6/8/8/8/K6b b - - 0 1", 2, 143),
        PerftTest::new("k7/B7/1B6/1B6/8/8/8/K6b b - - 0 1", 3, 1416),
        PerftTest::new("k7/B7/1B6/1B6/8/8/8/K6b b - - 0 1", 4, 31787),
        PerftTest::new("k7/B7/1B6/1B6/8/8/8/K6b b - - 0 1", 5, 310_862),
        PerftTest::new("k7/B7/1B6/1B6/8/8/8/K6b b - - 0 1", 6, 7_382_896),
        PerftTest::new("K7/b7/1b6/1b6/8/8/8/k6B b - - 0 1", 1, 21),
        PerftTest::new("K7/b7/1b6/1b6/8/8/8/k6B b - - 0 1", 2, 144),
        PerftTest::new("K7/b7/1b6/1b6/8/8/8/k6B b - - 0 1", 3, 3242),
        PerftTest::new("K7/b7/1b6/1b6/8/8/8/k6B b - - 0 1", 4, 32955),
        PerftTest::new("K7/b7/1b6/1b6/8/8/8/k6B b - - 0 1", 5, 787_524),
        PerftTest::new("K7/b7/1b6/1b6/8/8/8/k6B b - - 0 1", 6, 7_881_673),
        PerftTest::new("7k/RR6/8/8/8/8/rr6/7K w - - 0 1", 1, 19),
        PerftTest::new("7k/RR6/8/8/8/8/rr6/7K w - - 0 1", 2, 275),
        PerftTest::new("7k/RR6/8/8/8/8/rr6/7K w - - 0 1", 3, 5300),
        PerftTest::new("7k/RR6/8/8/8/8/rr6/7K w - - 0 1", 4, 104_342),
        PerftTest::new("7k/RR6/8/8/8/8/rr6/7K w - - 0 1", 5, 2_161_211),
        PerftTest::new("7k/RR6/8/8/8/8/rr6/7K w - - 0 1", 6, 44_956_585),
        PerftTest::new("R6r/8/8/2K5/5k2/8/8/r6R w - - 0 1", 1, 36),
        PerftTest::new("R6r/8/8/2K5/5k2/8/8/r6R w - - 0 1", 2, 1027),
        PerftTest::new("R6r/8/8/2K5/5k2/8/8/r6R w - - 0 1", 3, 29215),
        PerftTest::new("R6r/8/8/2K5/5k2/8/8/r6R w - - 0 1", 4, 771_461),
        PerftTest::new("R6r/8/8/2K5/5k2/8/8/r6R w - - 0 1", 5, 20_506_480),
        PerftTest::new("R6r/8/8/2K5/5k2/8/8/r6R w - - 0 1", 6, 525_169_084),
        PerftTest::new("7k/RR6/8/8/8/8/rr6/7K b - - 0 1", 1, 19),
        PerftTest::new("7k/RR6/8/8/8/8/rr6/7K b - - 0 1", 2, 275),
        PerftTest::new("7k/RR6/8/8/8/8/rr6/7K b - - 0 1", 3, 5300),
        PerftTest::new("7k/RR6/8/8/8/8/rr6/7K b - - 0 1", 4, 104_342),
        PerftTest::new("7k/RR6/8/8/8/8/rr6/7K b - - 0 1", 5, 2_161_211),
        PerftTest::new("7k/RR6/8/8/8/8/rr6/7K b - - 0 1", 6, 44_956_585),
        PerftTest::new("R6r/8/8/2K5/5k2/8/8/r6R b - - 0 1", 1, 36),
        PerftTest::new("R6r/8/8/2K5/5k2/8/8/r6R b - - 0 1", 2, 1027),
        PerftTest::new("R6r/8/8/2K5/5k2/8/8/r6R b - - 0 1", 3, 29227),
        PerftTest::new("R6r/8/8/2K5/5k2/8/8/r6R b - - 0 1", 4, 771_368),
        PerftTest::new("R6r/8/8/2K5/5k2/8/8/r6R b - - 0 1", 5, 20_521_342),
        PerftTest::new("R6r/8/8/2K5/5k2/8/8/r6R b - - 0 1", 6, 524_966_748),
        PerftTest::new("6kq/8/8/8/8/8/8/7K w - - 0 1", 1, 2),
        PerftTest::new("6kq/8/8/8/8/8/8/7K w - - 0 1", 2, 36),
        PerftTest::new("6kq/8/8/8/8/8/8/7K w - - 0 1", 3, 143),
        PerftTest::new("6kq/8/8/8/8/8/8/7K w - - 0 1", 4, 3637),
        PerftTest::new("6kq/8/8/8/8/8/8/7K w - - 0 1", 5, 14893),
        PerftTest::new("6kq/8/8/8/8/8/8/7K w - - 0 1", 6, 391_507),
        PerftTest::new("6KQ/8/8/8/8/8/8/7k b - - 0 1", 1, 2),
        PerftTest::new("6KQ/8/8/8/8/8/8/7k b - - 0 1", 2, 36),
        PerftTest::new("6KQ/8/8/8/8/8/8/7k b - - 0 1", 3, 143),
        PerftTest::new("6KQ/8/8/8/8/8/8/7k b - - 0 1", 4, 3637),
        PerftTest::new("6KQ/8/8/8/8/8/8/7k b - - 0 1", 5, 14893),
        PerftTest::new("6KQ/8/8/8/8/8/8/7k b - - 0 1", 6, 391_507),
        PerftTest::new("K7/8/8/3Q4/4q3/8/8/7k w - - 0 1", 1, 6),
        PerftTest::new("K7/8/8/3Q4/4q3/8/8/7k w - - 0 1", 2, 35),
        PerftTest::new("K7/8/8/3Q4/4q3/8/8/7k w - - 0 1", 3, 495),
        PerftTest::new("K7/8/8/3Q4/4q3/8/8/7k w - - 0 1", 4, 8349),
        PerftTest::new("K7/8/8/3Q4/4q3/8/8/7k w - - 0 1", 5, 166_741),
        PerftTest::new("K7/8/8/3Q4/4q3/8/8/7k w - - 0 1", 6, 3_370_175),
        PerftTest::new("6qk/8/8/8/8/8/8/7K b - - 0 1", 1, 22),
        PerftTest::new("6qk/8/8/8/8/8/8/7K b - - 0 1", 2, 43),
        PerftTest::new("6qk/8/8/8/8/8/8/7K b - - 0 1", 3, 1015),
        PerftTest::new("6qk/8/8/8/8/8/8/7K b - - 0 1", 4, 4167),
        PerftTest::new("6qk/8/8/8/8/8/8/7K b - - 0 1", 5, 105_749),
        PerftTest::new("6qk/8/8/8/8/8/8/7K b - - 0 1", 6, 419_369),
        PerftTest::new("6KQ/8/8/8/8/8/8/7k b - - 0 1", 1, 2),
        PerftTest::new("6KQ/8/8/8/8/8/8/7k b - - 0 1", 2, 36),
        PerftTest::new("6KQ/8/8/8/8/8/8/7k b - - 0 1", 3, 143),
        PerftTest::new("6KQ/8/8/8/8/8/8/7k b - - 0 1", 4, 3637),
        PerftTest::new("6KQ/8/8/8/8/8/8/7k b - - 0 1", 5, 14893),
        PerftTest::new("6KQ/8/8/8/8/8/8/7k b - - 0 1", 6, 391_507),
        PerftTest::new("K7/8/8/3Q4/4q3/8/8/7k b - - 0 1", 1, 6),
        PerftTest::new("K7/8/8/3Q4/4q3/8/8/7k b - - 0 1", 2, 35),
        PerftTest::new("K7/8/8/3Q4/4q3/8/8/7k b - - 0 1", 3, 495),
        PerftTest::new("K7/8/8/3Q4/4q3/8/8/7k b - - 0 1", 4, 8349),
        PerftTest::new("K7/8/8/3Q4/4q3/8/8/7k b - - 0 1", 5, 166_741),
        PerftTest::new("K7/8/8/3Q4/4q3/8/8/7k b - - 0 1", 6, 3_370_175),
        PerftTest::new("8/8/8/8/8/K7/P7/k7 w - - 0 1", 1, 3),
        PerftTest::new("8/8/8/8/8/K7/P7/k7 w - - 0 1", 2, 7),
        PerftTest::new("8/8/8/8/8/K7/P7/k7 w - - 0 1", 3, 43),
        PerftTest::new("8/8/8/8/8/K7/P7/k7 w - - 0 1", 4, 199),
        PerftTest::new("8/8/8/8/8/K7/P7/k7 w - - 0 1", 5, 1347),
        PerftTest::new("8/8/8/8/8/K7/P7/k7 w - - 0 1", 6, 6249),
        PerftTest::new("8/8/8/8/8/7K/7P/7k w - - 0 1", 1, 3),
        PerftTest::new("8/8/8/8/8/7K/7P/7k w - - 0 1", 2, 7),
        PerftTest::new("8/8/8/8/8/7K/7P/7k w - - 0 1", 3, 43),
        PerftTest::new("8/8/8/8/8/7K/7P/7k w - - 0 1", 4, 199),
        PerftTest::new("8/8/8/8/8/7K/7P/7k w - - 0 1", 5, 1347),
        PerftTest::new("8/8/8/8/8/7K/7P/7k w - - 0 1", 6, 6249),
        PerftTest::new("K7/p7/k7/8/8/8/8/8 w - - 0 1", 1, 1),
        PerftTest::new("K7/p7/k7/8/8/8/8/8 w - - 0 1", 2, 3),
        PerftTest::new("K7/p7/k7/8/8/8/8/8 w - - 0 1", 3, 12),
        PerftTest::new("K7/p7/k7/8/8/8/8/8 w - - 0 1", 4, 80),
        PerftTest::new("K7/p7/k7/8/8/8/8/8 w - - 0 1", 5, 342),
        PerftTest::new("K7/p7/k7/8/8/8/8/8 w - - 0 1", 6, 2343),
        PerftTest::new("7K/7p/7k/8/8/8/8/8 w - - 0 1", 1, 1),
        PerftTest::new("7K/7p/7k/8/8/8/8/8 w - - 0 1", 2, 3),
        PerftTest::new("7K/7p/7k/8/8/8/8/8 w - - 0 1", 3, 12),
        PerftTest::new("7K/7p/7k/8/8/8/8/8 w - - 0 1", 4, 80),
        PerftTest::new("7K/7p/7k/8/8/8/8/8 w - - 0 1", 5, 342),
        PerftTest::new("7K/7p/7k/8/8/8/8/8 w - - 0 1", 6, 2343),
        PerftTest::new("8/2k1p3/3pP3/3P2K1/8/8/8/8 w - - 0 1", 1, 7),
        PerftTest::new("8/2k1p3/3pP3/3P2K1/8/8/8/8 w - - 0 1", 2, 35),
        PerftTest::new("8/2k1p3/3pP3/3P2K1/8/8/8/8 w - - 0 1", 3, 210),
        PerftTest::new("8/2k1p3/3pP3/3P2K1/8/8/8/8 w - - 0 1", 4, 1091),
        PerftTest::new("8/2k1p3/3pP3/3P2K1/8/8/8/8 w - - 0 1", 5, 7028),
        PerftTest::new("8/2k1p3/3pP3/3P2K1/8/8/8/8 w - - 0 1", 6, 34834),
        PerftTest::new("8/8/8/8/8/K7/P7/k7 b - - 0 1", 1, 1),
        PerftTest::new("8/8/8/8/8/K7/P7/k7 b - - 0 1", 2, 3),
        PerftTest::new("8/8/8/8/8/K7/P7/k7 b - - 0 1", 3, 12),
        PerftTest::new("8/8/8/8/8/K7/P7/k7 b - - 0 1", 4, 80),
        PerftTest::new("8/8/8/8/8/K7/P7/k7 b - - 0 1", 5, 342),
        PerftTest::new("8/8/8/8/8/K7/P7/k7 b - - 0 1", 6, 2343),
        PerftTest::new("8/8/8/8/8/7K/7P/7k b - - 0 1", 1, 1),
        PerftTest::new("8/8/8/8/8/7K/7P/7k b - - 0 1", 2, 3),
        PerftTest::new("8/8/8/8/8/7K/7P/7k b - - 0 1", 3, 12),
        PerftTest::new("8/8/8/8/8/7K/7P/7k b - - 0 1", 4, 80),
        PerftTest::new("8/8/8/8/8/7K/7P/7k b - - 0 1", 5, 342),
        PerftTest::new("8/8/8/8/8/7K/7P/7k b - - 0 1", 6, 2343),
        PerftTest::new("K7/p7/k7/8/8/8/8/8 b - - 0 1", 1, 3),
        PerftTest::new("K7/p7/k7/8/8/8/8/8 b - - 0 1", 2, 7),
        PerftTest::new("K7/p7/k7/8/8/8/8/8 b - - 0 1", 3, 43),
        PerftTest::new("K7/p7/k7/8/8/8/8/8 b - - 0 1", 4, 199),
        PerftTest::new("K7/p7/k7/8/8/8/8/8 b - - 0 1", 5, 1347),
        PerftTest::new("K7/p7/k7/8/8/8/8/8 b - - 0 1", 6, 6249),
        PerftTest::new("7K/7p/7k/8/8/8/8/8 b - - 0 1", 1, 3),
        PerftTest::new("7K/7p/7k/8/8/8/8/8 b - - 0 1", 2, 7),
        PerftTest::new("7K/7p/7k/8/8/8/8/8 b - - 0 1", 3, 43),
        PerftTest::new("7K/7p/7k/8/8/8/8/8 b - - 0 1", 4, 199),
        PerftTest::new("7K/7p/7k/8/8/8/8/8 b - - 0 1", 5, 1347),
        PerftTest::new("7K/7p/7k/8/8/8/8/8 b - - 0 1", 6, 6249),
        PerftTest::new("8/2k1p3/3pP3/3P2K1/8/8/8/8 b - - 0 1", 1, 5),
        PerftTest::new("8/2k1p3/3pP3/3P2K1/8/8/8/8 b - - 0 1", 2, 35),
        PerftTest::new("8/2k1p3/3pP3/3P2K1/8/8/8/8 b - - 0 1", 3, 182),
        PerftTest::new("8/2k1p3/3pP3/3P2K1/8/8/8/8 b - - 0 1", 4, 1091),
        PerftTest::new("8/2k1p3/3pP3/3P2K1/8/8/8/8 b - - 0 1", 5, 5408),
        PerftTest::new("8/2k1p3/3pP3/3P2K1/8/8/8/8 b - - 0 1", 6, 34822),
        PerftTest::new("8/8/8/8/8/4k3/4P3/4K3 w - - 0 1", 1, 2),
        PerftTest::new("8/8/8/8/8/4k3/4P3/4K3 w - - 0 1", 2, 8),
        PerftTest::new("8/8/8/8/8/4k3/4P3/4K3 w - - 0 1", 3, 44),
        PerftTest::new("8/8/8/8/8/4k3/4P3/4K3 w - - 0 1", 4, 282),
        PerftTest::new("8/8/8/8/8/4k3/4P3/4K3 w - - 0 1", 5, 1814),
        PerftTest::new("8/8/8/8/8/4k3/4P3/4K3 w - - 0 1", 6, 11848),
        PerftTest::new("4k3/4p3/4K3/8/8/8/8/8 b - - 0 1", 1, 2),
        PerftTest::new("4k3/4p3/4K3/8/8/8/8/8 b - - 0 1", 2, 8),
        PerftTest::new("4k3/4p3/4K3/8/8/8/8/8 b - - 0 1", 3, 44),
        PerftTest::new("4k3/4p3/4K3/8/8/8/8/8 b - - 0 1", 4, 282),
        PerftTest::new("4k3/4p3/4K3/8/8/8/8/8 b - - 0 1", 5, 1814),
        PerftTest::new("4k3/4p3/4K3/8/8/8/8/8 b - - 0 1", 6, 11848),
        PerftTest::new("8/8/7k/7p/7P/7K/8/8 w - - 0 1", 1, 3),
        PerftTest::new("8/8/7k/7p/7P/7K/8/8 w - - 0 1", 2, 9),
        PerftTest::new("8/8/7k/7p/7P/7K/8/8 w - - 0 1", 3, 57),
        PerftTest::new("8/8/7k/7p/7P/7K/8/8 w - - 0 1", 4, 360),
        PerftTest::new("8/8/7k/7p/7P/7K/8/8 w - - 0 1", 5, 1969),
        PerftTest::new("8/8/7k/7p/7P/7K/8/8 w - - 0 1", 6, 10724),
        PerftTest::new("8/8/k7/p7/P7/K7/8/8 w - - 0 1", 1, 3),
        PerftTest::new("8/8/k7/p7/P7/K7/8/8 w - - 0 1", 2, 9),
        PerftTest::new("8/8/k7/p7/P7/K7/8/8 w - - 0 1", 3, 57),
        PerftTest::new("8/8/k7/p7/P7/K7/8/8 w - - 0 1", 4, 360),
        PerftTest::new("8/8/k7/p7/P7/K7/8/8 w - - 0 1", 5, 1969),
        PerftTest::new("8/8/k7/p7/P7/K7/8/8 w - - 0 1", 6, 10724),
        PerftTest::new("8/8/3k4/3p4/3P4/3K4/8/8 w - - 0 1", 1, 5),
        PerftTest::new("8/8/3k4/3p4/3P4/3K4/8/8 w - - 0 1", 2, 25),
        PerftTest::new("8/8/3k4/3p4/3P4/3K4/8/8 w - - 0 1", 3, 180),
        PerftTest::new("8/8/3k4/3p4/3P4/3K4/8/8 w - - 0 1", 4, 1294),
        PerftTest::new("8/8/3k4/3p4/3P4/3K4/8/8 w - - 0 1", 5, 8296),
        PerftTest::new("8/8/3k4/3p4/3P4/3K4/8/8 w - - 0 1", 6, 53138),
        PerftTest::new("8/3k4/3p4/8/3P4/3K4/8/8 w - - 0 1", 1, 8),
        PerftTest::new("8/3k4/3p4/8/3P4/3K4/8/8 w - - 0 1", 2, 61),
        PerftTest::new("8/3k4/3p4/8/3P4/3K4/8/8 w - - 0 1", 3, 483),
        PerftTest::new("8/3k4/3p4/8/3P4/3K4/8/8 w - - 0 1", 4, 3213),
        PerftTest::new("8/3k4/3p4/8/3P4/3K4/8/8 w - - 0 1", 5, 23599),
        PerftTest::new("8/3k4/3p4/8/3P4/3K4/8/8 w - - 0 1", 6, 157_093),
        PerftTest::new("8/8/3k4/3p4/8/3P4/3K4/8 w - - 0 1", 1, 8),
        PerftTest::new("8/8/3k4/3p4/8/3P4/3K4/8 w - - 0 1", 2, 61),
        PerftTest::new("8/8/3k4/3p4/8/3P4/3K4/8 w - - 0 1", 3, 411),
        PerftTest::new("8/8/3k4/3p4/8/3P4/3K4/8 w - - 0 1", 4, 3213),
        PerftTest::new("8/8/3k4/3p4/8/3P4/3K4/8 w - - 0 1", 5, 21637),
        PerftTest::new("8/8/3k4/3p4/8/3P4/3K4/8 w - - 0 1", 6, 158_065),
        PerftTest::new("k7/8/3p4/8/3P4/8/8/7K w - - 0 1", 1, 4),
        PerftTest::new("k7/8/3p4/8/3P4/8/8/7K w - - 0 1", 2, 15),
        PerftTest::new("k7/8/3p4/8/3P4/8/8/7K w - - 0 1", 3, 90),
        PerftTest::new("k7/8/3p4/8/3P4/8/8/7K w - - 0 1", 4, 534),
        PerftTest::new("k7/8/3p4/8/3P4/8/8/7K w - - 0 1", 5, 3450),
        PerftTest::new("k7/8/3p4/8/3P4/8/8/7K w - - 0 1", 6, 20960),
        PerftTest::new("8/8/7k/7p/7P/7K/8/8 b - - 0 1", 1, 3),
        PerftTest::new("8/8/7k/7p/7P/7K/8/8 b - - 0 1", 2, 9),
        PerftTest::new("8/8/7k/7p/7P/7K/8/8 b - - 0 1", 3, 57),
        PerftTest::new("8/8/7k/7p/7P/7K/8/8 b - - 0 1", 4, 360),
        PerftTest::new("8/8/7k/7p/7P/7K/8/8 b - - 0 1", 5, 1969),
        PerftTest::new("8/8/7k/7p/7P/7K/8/8 b - - 0 1", 6, 10724),
        PerftTest::new("8/8/k7/p7/P7/K7/8/8 b - - 0 1", 1, 3),
        PerftTest::new("8/8/k7/p7/P7/K7/8/8 b - - 0 1", 2, 9),
        PerftTest::new("8/8/k7/p7/P7/K7/8/8 b - - 0 1", 3, 57),
        PerftTest::new("8/8/k7/p7/P7/K7/8/8 b - - 0 1", 4, 360),
        PerftTest::new("8/8/k7/p7/P7/K7/8/8 b - - 0 1", 5, 1969),
        PerftTest::new("8/8/k7/p7/P7/K7/8/8 b - - 0 1", 6, 10724),
        PerftTest::new("8/8/3k4/3p4/3P4/3K4/8/8 b - - 0 1", 1, 5),
        PerftTest::new("8/8/3k4/3p4/3P4/3K4/8/8 b - - 0 1", 2, 25),
        PerftTest::new("8/8/3k4/3p4/3P4/3K4/8/8 b - - 0 1", 3, 180),
        PerftTest::new("8/8/3k4/3p4/3P4/3K4/8/8 b - - 0 1", 4, 1294),
        PerftTest::new("8/8/3k4/3p4/3P4/3K4/8/8 b - - 0 1", 5, 8296),
        PerftTest::new("8/8/3k4/3p4/3P4/3K4/8/8 b - - 0 1", 6, 53138),
        PerftTest::new("8/3k4/3p4/8/3P4/3K4/8/8 b - - 0 1", 1, 8),
        PerftTest::new("8/3k4/3p4/8/3P4/3K4/8/8 b - - 0 1", 2, 61),
        PerftTest::new("8/3k4/3p4/8/3P4/3K4/8/8 b - - 0 1", 3, 411),
        PerftTest::new("8/3k4/3p4/8/3P4/3K4/8/8 b - - 0 1", 4, 3213),
        PerftTest::new("8/3k4/3p4/8/3P4/3K4/8/8 b - - 0 1", 5, 21637),
        PerftTest::new("8/3k4/3p4/8/3P4/3K4/8/8 b - - 0 1", 6, 158_065),
        PerftTest::new("8/8/3k4/3p4/8/3P4/3K4/8 b - - 0 1", 1, 8),
        PerftTest::new("8/8/3k4/3p4/8/3P4/3K4/8 b - - 0 1", 2, 61),
        PerftTest::new("8/8/3k4/3p4/8/3P4/3K4/8 b - - 0 1", 3, 483),
        PerftTest::new("8/8/3k4/3p4/8/3P4/3K4/8 b - - 0 1", 4, 3213),
        PerftTest::new("8/8/3k4/3p4/8/3P4/3K4/8 b - - 0 1", 5, 23599),
        PerftTest::new("8/8/3k4/3p4/8/3P4/3K4/8 b - - 0 1", 6, 157_093),
        PerftTest::new("k7/8/3p4/8/3P4/8/8/7K b - - 0 1", 1, 4),
        PerftTest::new("k7/8/3p4/8/3P4/8/8/7K b - - 0 1", 2, 15),
        PerftTest::new("k7/8/3p4/8/3P4/8/8/7K b - - 0 1", 3, 89),
        PerftTest::new("k7/8/3p4/8/3P4/8/8/7K b - - 0 1", 4, 537),
        PerftTest::new("k7/8/3p4/8/3P4/8/8/7K b - - 0 1", 5, 3309),
        PerftTest::new("k7/8/3p4/8/3P4/8/8/7K b - - 0 1", 6, 21104),
        PerftTest::new("7k/3p4/8/8/3P4/8/8/K7 w - - 0 1", 1, 4),
        PerftTest::new("7k/3p4/8/8/3P4/8/8/K7 w - - 0 1", 2, 19),
        PerftTest::new("7k/3p4/8/8/3P4/8/8/K7 w - - 0 1", 3, 117),
        PerftTest::new("7k/3p4/8/8/3P4/8/8/K7 w - - 0 1", 4, 720),
        PerftTest::new("7k/3p4/8/8/3P4/8/8/K7 w - - 0 1", 5, 4661),
        PerftTest::new("7k/3p4/8/8/3P4/8/8/K7 w - - 0 1", 6, 32191),
        PerftTest::new("7k/8/8/3p4/8/8/3P4/K7 w - - 0 1", 1, 5),
        PerftTest::new("7k/8/8/3p4/8/8/3P4/K7 w - - 0 1", 2, 19),
        PerftTest::new("7k/8/8/3p4/8/8/3P4/K7 w - - 0 1", 3, 116),
        PerftTest::new("7k/8/8/3p4/8/8/3P4/K7 w - - 0 1", 4, 716),
        PerftTest::new("7k/8/8/3p4/8/8/3P4/K7 w - - 0 1", 5, 4786),
        PerftTest::new("7k/8/8/3p4/8/8/3P4/K7 w - - 0 1", 6, 30980),
        PerftTest::new("k7/8/8/7p/6P1/8/8/K7 w - - 0 1", 1, 5),
        PerftTest::new("k7/8/8/7p/6P1/8/8/K7 w - - 0 1", 2, 22),
        PerftTest::new("k7/8/8/7p/6P1/8/8/K7 w - - 0 1", 3, 139),
        PerftTest::new("k7/8/8/7p/6P1/8/8/K7 w - - 0 1", 4, 877),
        PerftTest::new("k7/8/8/7p/6P1/8/8/K7 w - - 0 1", 5, 6112),
        PerftTest::new("k7/8/8/7p/6P1/8/8/K7 w - - 0 1", 6, 41874),
        PerftTest::new("k7/8/7p/8/8/6P1/8/K7 w - - 0 1", 1, 4),
        PerftTest::new("k7/8/7p/8/8/6P1/8/K7 w - - 0 1", 2, 16),
        PerftTest::new("k7/8/7p/8/8/6P1/8/K7 w - - 0 1", 3, 101),
        PerftTest::new("k7/8/7p/8/8/6P1/8/K7 w - - 0 1", 4, 637),
        PerftTest::new("k7/8/7p/8/8/6P1/8/K7 w - - 0 1", 5, 4354),
        PerftTest::new("k7/8/7p/8/8/6P1/8/K7 w - - 0 1", 6, 29679),
        PerftTest::new("k7/8/8/6p1/7P/8/8/K7 w - - 0 1", 1, 5),
        PerftTest::new("k7/8/8/6p1/7P/8/8/K7 w - - 0 1", 2, 22),
        PerftTest::new("k7/8/8/6p1/7P/8/8/K7 w - - 0 1", 3, 139),
        PerftTest::new("k7/8/8/6p1/7P/8/8/K7 w - - 0 1", 4, 877),
        PerftTest::new("k7/8/8/6p1/7P/8/8/K7 w - - 0 1", 5, 6112),
        PerftTest::new("k7/8/8/6p1/7P/8/8/K7 w - - 0 1", 6, 41874),
        PerftTest::new("k7/8/6p1/8/8/7P/8/K7 w - - 0 1", 1, 4),
        PerftTest::new("k7/8/6p1/8/8/7P/8/K7 w - - 0 1", 2, 16),
        PerftTest::new("k7/8/6p1/8/8/7P/8/K7 w - - 0 1", 3, 101),
        PerftTest::new("k7/8/6p1/8/8/7P/8/K7 w - - 0 1", 4, 637),
        PerftTest::new("k7/8/6p1/8/8/7P/8/K7 w - - 0 1", 5, 4354),
        PerftTest::new("k7/8/6p1/8/8/7P/8/K7 w - - 0 1", 6, 29679),
        PerftTest::new("k7/8/8/3p4/4p3/8/8/7K w - - 0 1", 1, 3),
        PerftTest::new("k7/8/8/3p4/4p3/8/8/7K w - - 0 1", 2, 15),
        PerftTest::new("k7/8/8/3p4/4p3/8/8/7K w - - 0 1", 3, 84),
        PerftTest::new("k7/8/8/3p4/4p3/8/8/7K w - - 0 1", 4, 573),
        PerftTest::new("k7/8/8/3p4/4p3/8/8/7K w - - 0 1", 5, 3013),
        PerftTest::new("k7/8/8/3p4/4p3/8/8/7K w - - 0 1", 6, 22886),
        PerftTest::new("k7/8/3p4/8/8/4P3/8/7K w - - 0 1", 1, 4),
        PerftTest::new("k7/8/3p4/8/8/4P3/8/7K w - - 0 1", 2, 16),
        PerftTest::new("k7/8/3p4/8/8/4P3/8/7K w - - 0 1", 3, 101),
        PerftTest::new("k7/8/3p4/8/8/4P3/8/7K w - - 0 1", 4, 637),
        PerftTest::new("k7/8/3p4/8/8/4P3/8/7K w - - 0 1", 5, 4271),
        PerftTest::new("k7/8/3p4/8/8/4P3/8/7K w - - 0 1", 6, 28662),
        PerftTest::new("7k/3p4/8/8/3P4/8/8/K7 b - - 0 1", 1, 5),
        PerftTest::new("7k/3p4/8/8/3P4/8/8/K7 b - - 0 1", 2, 19),
        PerftTest::new("7k/3p4/8/8/3P4/8/8/K7 b - - 0 1", 3, 117),
        PerftTest::new("7k/3p4/8/8/3P4/8/8/K7 b - - 0 1", 4, 720),
        PerftTest::new("7k/3p4/8/8/3P4/8/8/K7 b - - 0 1", 5, 5014),
        PerftTest::new("7k/3p4/8/8/3P4/8/8/K7 b - - 0 1", 6, 32167),
        PerftTest::new("7k/8/8/3p4/8/8/3P4/K7 b - - 0 1", 1, 4),
        PerftTest::new("7k/8/8/3p4/8/8/3P4/K7 b - - 0 1", 2, 19),
        PerftTest::new("7k/8/8/3p4/8/8/3P4/K7 b - - 0 1", 3, 117),
        PerftTest::new("7k/8/8/3p4/8/8/3P4/K7 b - - 0 1", 4, 712),
        PerftTest::new("7k/8/8/3p4/8/8/3P4/K7 b - - 0 1", 5, 4658),
        PerftTest::new("7k/8/8/3p4/8/8/3P4/K7 b - - 0 1", 6, 30749),
        PerftTest::new("k7/8/8/7p/6P1/8/8/K7 b - - 0 1", 1, 5),
        PerftTest::new("k7/8/8/7p/6P1/8/8/K7 b - - 0 1", 2, 22),
        PerftTest::new("k7/8/8/7p/6P1/8/8/K7 b - - 0 1", 3, 139),
        PerftTest::new("k7/8/8/7p/6P1/8/8/K7 b - - 0 1", 4, 877),
        PerftTest::new("k7/8/8/7p/6P1/8/8/K7 b - - 0 1", 5, 6112),
        PerftTest::new("k7/8/8/7p/6P1/8/8/K7 b - - 0 1", 6, 41874),
        PerftTest::new("k7/8/7p/8/8/6P1/8/K7 b - - 0 1", 1, 4),
        PerftTest::new("k7/8/7p/8/8/6P1/8/K7 b - - 0 1", 2, 16),
        PerftTest::new("k7/8/7p/8/8/6P1/8/K7 b - - 0 1", 3, 101),
        PerftTest::new("k7/8/7p/8/8/6P1/8/K7 b - - 0 1", 4, 637),
        PerftTest::new("k7/8/7p/8/8/6P1/8/K7 b - - 0 1", 5, 4354),
        PerftTest::new("k7/8/7p/8/8/6P1/8/K7 b - - 0 1", 6, 29679),
        PerftTest::new("k7/8/8/6p1/7P/8/8/K7 b - - 0 1", 1, 5),
        PerftTest::new("k7/8/8/6p1/7P/8/8/K7 b - - 0 1", 2, 22),
        PerftTest::new("k7/8/8/6p1/7P/8/8/K7 b - - 0 1", 3, 139),
        PerftTest::new("k7/8/8/6p1/7P/8/8/K7 b - - 0 1", 4, 877),
        PerftTest::new("k7/8/8/6p1/7P/8/8/K7 b - - 0 1", 5, 6112),
        PerftTest::new("k7/8/8/6p1/7P/8/8/K7 b - - 0 1", 6, 41874),
        PerftTest::new("k7/8/6p1/8/8/7P/8/K7 b - - 0 1", 1, 4),
        PerftTest::new("k7/8/6p1/8/8/7P/8/K7 b - - 0 1", 2, 16),
        PerftTest::new("k7/8/6p1/8/8/7P/8/K7 b - - 0 1", 3, 101),
        PerftTest::new("k7/8/6p1/8/8/7P/8/K7 b - - 0 1", 4, 637),
        PerftTest::new("k7/8/6p1/8/8/7P/8/K7 b - - 0 1", 5, 4354),
        PerftTest::new("k7/8/6p1/8/8/7P/8/K7 b - - 0 1", 6, 29679),
        PerftTest::new("k7/8/8/3p4/4p3/8/8/7K b - - 0 1", 1, 5),
        PerftTest::new("k7/8/8/3p4/4p3/8/8/7K b - - 0 1", 2, 15),
        PerftTest::new("k7/8/8/3p4/4p3/8/8/7K b - - 0 1", 3, 102),
        PerftTest::new("k7/8/8/3p4/4p3/8/8/7K b - - 0 1", 4, 569),
        PerftTest::new("k7/8/8/3p4/4p3/8/8/7K b - - 0 1", 5, 4337),
        PerftTest::new("k7/8/8/3p4/4p3/8/8/7K b - - 0 1", 6, 22579),
        PerftTest::new("k7/8/3p4/8/8/4P3/8/7K b - - 0 1", 1, 4),
        PerftTest::new("k7/8/3p4/8/8/4P3/8/7K b - - 0 1", 2, 16),
        PerftTest::new("k7/8/3p4/8/8/4P3/8/7K b - - 0 1", 3, 101),
        PerftTest::new("k7/8/3p4/8/8/4P3/8/7K b - - 0 1", 4, 637),
        PerftTest::new("k7/8/3p4/8/8/4P3/8/7K b - - 0 1", 5, 4271),
        PerftTest::new("k7/8/3p4/8/8/4P3/8/7K b - - 0 1", 6, 28662),
        PerftTest::new("7k/8/8/p7/1P6/8/8/7K w - - 0 1", 1, 5),
        PerftTest::new("7k/8/8/p7/1P6/8/8/7K w - - 0 1", 2, 22),
        PerftTest::new("7k/8/8/p7/1P6/8/8/7K w - - 0 1", 3, 139),
        PerftTest::new("7k/8/8/p7/1P6/8/8/7K w - - 0 1", 4, 877),
        PerftTest::new("7k/8/8/p7/1P6/8/8/7K w - - 0 1", 5, 6112),
        PerftTest::new("7k/8/8/p7/1P6/8/8/7K w - - 0 1", 6, 41874),
        PerftTest::new("7k/8/p7/8/8/1P6/8/7K w - - 0 1", 1, 4),
        PerftTest::new("7k/8/p7/8/8/1P6/8/7K w - - 0 1", 2, 16),
        PerftTest::new("7k/8/p7/8/8/1P6/8/7K w - - 0 1", 3, 101),
        PerftTest::new("7k/8/p7/8/8/1P6/8/7K w - - 0 1", 4, 637),
        PerftTest::new("7k/8/p7/8/8/1P6/8/7K w - - 0 1", 5, 4354),
        PerftTest::new("7k/8/p7/8/8/1P6/8/7K w - - 0 1", 6, 29679),
        PerftTest::new("7k/8/8/1p6/P7/8/8/7K w - - 0 1", 1, 5),
        PerftTest::new("7k/8/8/1p6/P7/8/8/7K w - - 0 1", 2, 22),
        PerftTest::new("7k/8/8/1p6/P7/8/8/7K w - - 0 1", 3, 139),
        PerftTest::new("7k/8/8/1p6/P7/8/8/7K w - - 0 1", 4, 877),
        PerftTest::new("7k/8/8/1p6/P7/8/8/7K w - - 0 1", 5, 6112),
        PerftTest::new("7k/8/8/1p6/P7/8/8/7K w - - 0 1", 6, 41874),
        PerftTest::new("7k/8/1p6/8/8/P7/8/7K w - - 0 1", 1, 4),
        PerftTest::new("7k/8/1p6/8/8/P7/8/7K w - - 0 1", 2, 16),
        PerftTest::new("7k/8/1p6/8/8/P7/8/7K w - - 0 1", 3, 101),
        PerftTest::new("7k/8/1p6/8/8/P7/8/7K w - - 0 1", 4, 637),
        PerftTest::new("7k/8/1p6/8/8/P7/8/7K w - - 0 1", 5, 4354),
        PerftTest::new("7k/8/1p6/8/8/P7/8/7K w - - 0 1", 6, 29679),
        PerftTest::new("k7/7p/8/8/8/8/6P1/K7 w - - 0 1", 1, 5),
        PerftTest::new("k7/7p/8/8/8/8/6P1/K7 w - - 0 1", 2, 25),
        PerftTest::new("k7/7p/8/8/8/8/6P1/K7 w - - 0 1", 3, 161),
        PerftTest::new("k7/7p/8/8/8/8/6P1/K7 w - - 0 1", 4, 1035),
        PerftTest::new("k7/7p/8/8/8/8/6P1/K7 w - - 0 1", 5, 7574),
        PerftTest::new("k7/7p/8/8/8/8/6P1/K7 w - - 0 1", 6, 55338),
        PerftTest::new("k7/6p1/8/8/8/8/7P/K7 w - - 0 1", 1, 5),
        PerftTest::new("k7/6p1/8/8/8/8/7P/K7 w - - 0 1", 2, 25),
        PerftTest::new("k7/6p1/8/8/8/8/7P/K7 w - - 0 1", 3, 161),
        PerftTest::new("k7/6p1/8/8/8/8/7P/K7 w - - 0 1", 4, 1035),
        PerftTest::new("k7/6p1/8/8/8/8/7P/K7 w - - 0 1", 5, 7574),
        PerftTest::new("k7/6p1/8/8/8/8/7P/K7 w - - 0 1", 6, 55338),
        PerftTest::new("3k4/3pp3/8/8/8/8/3PP3/3K4 w - - 0 1", 1, 7),
        PerftTest::new("3k4/3pp3/8/8/8/8/3PP3/3K4 w - - 0 1", 2, 49),
        PerftTest::new("3k4/3pp3/8/8/8/8/3PP3/3K4 w - - 0 1", 3, 378),
        PerftTest::new("3k4/3pp3/8/8/8/8/3PP3/3K4 w - - 0 1", 4, 2902),
        PerftTest::new("3k4/3pp3/8/8/8/8/3PP3/3K4 w - - 0 1", 5, 24122),
        PerftTest::new("3k4/3pp3/8/8/8/8/3PP3/3K4 w - - 0 1", 6, 199_002),
        PerftTest::new("7k/8/8/p7/1P6/8/8/7K b - - 0 1", 1, 5),
        PerftTest::new("7k/8/8/p7/1P6/8/8/7K b - - 0 1", 2, 22),
        PerftTest::new("7k/8/8/p7/1P6/8/8/7K b - - 0 1", 3, 139),
        PerftTest::new("7k/8/8/p7/1P6/8/8/7K b - - 0 1", 4, 877),
        PerftTest::new("7k/8/8/p7/1P6/8/8/7K b - - 0 1", 5, 6112),
        PerftTest::new("7k/8/8/p7/1P6/8/8/7K b - - 0 1", 6, 41874),
        PerftTest::new("7k/8/p7/8/8/1P6/8/7K b - - 0 1", 1, 4),
        PerftTest::new("7k/8/p7/8/8/1P6/8/7K b - - 0 1", 2, 16),
        PerftTest::new("7k/8/p7/8/8/1P6/8/7K b - - 0 1", 3, 101),
        PerftTest::new("7k/8/p7/8/8/1P6/8/7K b - - 0 1", 4, 637),
        PerftTest::new("7k/8/p7/8/8/1P6/8/7K b - - 0 1", 5, 4354),
        PerftTest::new("7k/8/p7/8/8/1P6/8/7K b - - 0 1", 6, 29679),
        PerftTest::new("7k/8/8/1p6/P7/8/8/7K b - - 0 1", 1, 5),
        PerftTest::new("7k/8/8/1p6/P7/8/8/7K b - - 0 1", 2, 22),
        PerftTest::new("7k/8/8/1p6/P7/8/8/7K b - - 0 1", 3, 139),
        PerftTest::new("7k/8/8/1p6/P7/8/8/7K b - - 0 1", 4, 877),
        PerftTest::new("7k/8/8/1p6/P7/8/8/7K b - - 0 1", 5, 6112),
        PerftTest::new("7k/8/8/1p6/P7/8/8/7K b - - 0 1", 6, 41874),
        PerftTest::new("7k/8/1p6/8/8/P7/8/7K b - - 0 1", 1, 4),
        PerftTest::new("7k/8/1p6/8/8/P7/8/7K b - - 0 1", 2, 16),
        PerftTest::new("7k/8/1p6/8/8/P7/8/7K b - - 0 1", 3, 101),
        PerftTest::new("7k/8/1p6/8/8/P7/8/7K b - - 0 1", 4, 637),
        PerftTest::new("7k/8/1p6/8/8/P7/8/7K b - - 0 1", 5, 4354),
        PerftTest::new("7k/8/1p6/8/8/P7/8/7K b - - 0 1", 6, 29679),
        PerftTest::new("k7/7p/8/8/8/8/6P1/K7 b - - 0 1", 1, 5),
        PerftTest::new("k7/7p/8/8/8/8/6P1/K7 b - - 0 1", 2, 25),
        PerftTest::new("k7/7p/8/8/8/8/6P1/K7 b - - 0 1", 3, 161),
        PerftTest::new("k7/7p/8/8/8/8/6P1/K7 b - - 0 1", 4, 1035),
        PerftTest::new("k7/7p/8/8/8/8/6P1/K7 b - - 0 1", 5, 7574),
        PerftTest::new("k7/7p/8/8/8/8/6P1/K7 b - - 0 1", 6, 55338),
        PerftTest::new("k7/6p1/8/8/8/8/7P/K7 b - - 0 1", 1, 5),
        PerftTest::new("k7/6p1/8/8/8/8/7P/K7 b - - 0 1", 2, 25),
        PerftTest::new("k7/6p1/8/8/8/8/7P/K7 b - - 0 1", 3, 161),
        PerftTest::new("k7/6p1/8/8/8/8/7P/K7 b - - 0 1", 4, 1035),
        PerftTest::new("k7/6p1/8/8/8/8/7P/K7 b - - 0 1", 5, 7574),
        PerftTest::new("k7/6p1/8/8/8/8/7P/K7 b - - 0 1", 6, 55338),
        PerftTest::new("3k4/3pp3/8/8/8/8/3PP3/3K4 b - - 0 1", 1, 7),
        PerftTest::new("3k4/3pp3/8/8/8/8/3PP3/3K4 b - - 0 1", 2, 49),
        PerftTest::new("3k4/3pp3/8/8/8/8/3PP3/3K4 b - - 0 1", 3, 378),
        PerftTest::new("3k4/3pp3/8/8/8/8/3PP3/3K4 b - - 0 1", 4, 2902),
        PerftTest::new("3k4/3pp3/8/8/8/8/3PP3/3K4 b - - 0 1", 5, 24122),
        PerftTest::new("3k4/3pp3/8/8/8/8/3PP3/3K4 b - - 0 1", 6, 199_002),
        PerftTest::new("8/Pk6/8/8/8/8/6Kp/8 w - - 0 1", 1, 11),
        PerftTest::new("8/Pk6/8/8/8/8/6Kp/8 w - - 0 1", 2, 97),
        PerftTest::new("8/Pk6/8/8/8/8/6Kp/8 w - - 0 1", 3, 887),
        PerftTest::new("8/Pk6/8/8/8/8/6Kp/8 w - - 0 1", 4, 8048),
        PerftTest::new("8/Pk6/8/8/8/8/6Kp/8 w - - 0 1", 5, 90606),
        PerftTest::new("8/Pk6/8/8/8/8/6Kp/8 w - - 0 1", 6, 1_030_499),
        PerftTest::new("n1n5/1Pk5/8/8/8/8/5Kp1/5N1N w - - 0 1", 1, 24),
        PerftTest::new("n1n5/1Pk5/8/8/8/8/5Kp1/5N1N w - - 0 1", 2, 421),
        PerftTest::new("n1n5/1Pk5/8/8/8/8/5Kp1/5N1N w - - 0 1", 3, 7421),
        PerftTest::new("n1n5/1Pk5/8/8/8/8/5Kp1/5N1N w - - 0 1", 4, 124_608),
        PerftTest::new("n1n5/1Pk5/8/8/8/8/5Kp1/5N1N w - - 0 1", 5, 2_193_768),
        PerftTest::new("n1n5/1Pk5/8/8/8/8/5Kp1/5N1N w - - 0 1", 6, 37_665_329),
        PerftTest::new("8/PPPk4/8/8/8/8/4Kppp/8 w - - 0 1", 1, 18),
        PerftTest::new("8/PPPk4/8/8/8/8/4Kppp/8 w - - 0 1", 2, 270),
        PerftTest::new("8/PPPk4/8/8/8/8/4Kppp/8 w - - 0 1", 3, 4699),
        PerftTest::new("8/PPPk4/8/8/8/8/4Kppp/8 w - - 0 1", 4, 79355),
        PerftTest::new("8/PPPk4/8/8/8/8/4Kppp/8 w - - 0 1", 5, 1_533_145),
        PerftTest::new("8/PPPk4/8/8/8/8/4Kppp/8 w - - 0 1", 6, 28_859_283),
        PerftTest::new("n1n5/PPPk4/8/8/8/8/4Kppp/5N1N w - - 0 1", 1, 24),
        PerftTest::new("n1n5/PPPk4/8/8/8/8/4Kppp/5N1N w - - 0 1", 2, 496),
        PerftTest::new("n1n5/PPPk4/8/8/8/8/4Kppp/5N1N w - - 0 1", 3, 9483),
        PerftTest::new("n1n5/PPPk4/8/8/8/8/4Kppp/5N1N w - - 0 1", 4, 182_838),
        PerftTest::new("n1n5/PPPk4/8/8/8/8/4Kppp/5N1N w - - 0 1", 5, 3_605_103),
        PerftTest::new("n1n5/PPPk4/8/8/8/8/4Kppp/5N1N w - - 0 1", 6, 71_179_139),
        PerftTest::new("8/Pk6/8/8/8/8/6Kp/8 b - - 0 1", 1, 11),
        PerftTest::new("8/Pk6/8/8/8/8/6Kp/8 b - - 0 1", 2, 97),
        PerftTest::new("8/Pk6/8/8/8/8/6Kp/8 b - - 0 1", 3, 887),
        PerftTest::new("8/Pk6/8/8/8/8/6Kp/8 b - - 0 1", 4, 8048),
        PerftTest::new("8/Pk6/8/8/8/8/6Kp/8 b - - 0 1", 5, 90606),
        PerftTest::new("8/Pk6/8/8/8/8/6Kp/8 b - - 0 1", 6, 1_030_499),
        PerftTest::new("n1n5/1Pk5/8/8/8/8/5Kp1/5N1N b - - 0 1", 1, 24),
        PerftTest::new("n1n5/1Pk5/8/8/8/8/5Kp1/5N1N b - - 0 1", 2, 421),
        PerftTest::new("n1n5/1Pk5/8/8/8/8/5Kp1/5N1N b - - 0 1", 3, 7421),
        PerftTest::new("n1n5/1Pk5/8/8/8/8/5Kp1/5N1N b - - 0 1", 4, 124_608),
        PerftTest::new("n1n5/1Pk5/8/8/8/8/5Kp1/5N1N b - - 0 1", 5, 2_193_768),
        PerftTest::new("n1n5/1Pk5/8/8/8/8/5Kp1/5N1N b - - 0 1", 6, 37_665_329),
        PerftTest::new("8/PPPk4/8/8/8/8/4Kppp/8 b - - 0 1", 1, 18),
        PerftTest::new("8/PPPk4/8/8/8/8/4Kppp/8 b - - 0 1", 2, 270),
        PerftTest::new("8/PPPk4/8/8/8/8/4Kppp/8 b - - 0 1", 3, 4699),
        PerftTest::new("8/PPPk4/8/8/8/8/4Kppp/8 b - - 0 1", 4, 79355),
        PerftTest::new("8/PPPk4/8/8/8/8/4Kppp/8 b - - 0 1", 5, 1_533_145),
        PerftTest::new("8/PPPk4/8/8/8/8/4Kppp/8 b - - 0 1", 6, 28_859_283),
        PerftTest::new("n1n5/PPPk4/8/8/8/8/4Kppp/5N1N b - - 0 1", 1, 24),
        PerftTest::new("n1n5/PPPk4/8/8/8/8/4Kppp/5N1N b - - 0 1", 2, 496),
        PerftTest::new("n1n5/PPPk4/8/8/8/8/4Kppp/5N1N b - - 0 1", 3, 9483),
        PerftTest::new("n1n5/PPPk4/8/8/8/8/4Kppp/5N1N b - - 0 1", 4, 182_838),
        PerftTest::new("n1n5/PPPk4/8/8/8/8/4Kppp/5N1N b - - 0 1", 5, 3_605_103),
        PerftTest::new("n1n5/PPPk4/8/8/8/8/4Kppp/5N1N b - - 0 1", 6, 71_179_139),
    ];

    let mut total: u64 = 0;
    let start = Instant::now();
    let mut i = 0;
    let mut passed = 0;
    let mut failed = 0;
    for test in test_suite {
        i += 1;
        let mut board: Board = Board::new();
        board.load_fen(&test.fen);
        let nodes: u64 = perft(&mut board, test.depth);
        total += nodes;
        if nodes == test.nodes {
            println!("test {i} passed");
            passed += 1;
        } else {
            println!("test {} failed, position {}, depth {}, nodes {}, expected {}", i, test.fen, test.depth, nodes, test.nodes);
            failed += 1;
        }
    }
    let duration = start.elapsed();
    println!("total: ");
    println!("{} nodes {} nps", total, total as f64/duration.as_secs_f64());
    println!("{passed} passed, {failed} failed");
}